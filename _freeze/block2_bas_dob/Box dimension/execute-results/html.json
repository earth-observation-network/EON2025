{
  "hash": "b70b43fdf9467255fcaaefd14da2d467",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Measuring Tree/Forest Structural Complexity with (Fractal) Box Dimension $(D_b)$ from 3D Point Clouds\"\nauthor: \"Prakash Basnet, [University of Applied Sciences and Arts (HAWK)\"\noutput: html_document\ndate: \"2025-08-26\"\n---\n\n\n\n# Introduction\n\n*Clouds are not spheres, mountains are not cones, coastlines are not circles, and bark is not smooth, nor does lightning travel in a straight line.‚Äù - Mandelbrot (1983)*\n\nA fractal is a geometric object that shows **self-similarity**; its parts resemble the whole, no matter the scale of observation. Imagine zooming in on a fern leaf, a coastline, or a broccoli head: at each magnification, similar patterns reappear. Unlike simple geometric figures, fractals are **irregular and infinitely nested** in structure. They are found widely in nature and are best described not by whole-number dimensions (like 1D lines or 2D surfaces), but by **fractional, non-integer dimensions**, known as the **fractal dimension**. This dimension is crucial for quantifying the complexity of self-similar systems, whether exact (mathematical fractals) or statistical (natural systems).\n\n![Koch Curve](images/koch_curve.png)\n\n![Sierpinski triangle](images/Sierpinski triangle.png)\n\n\n## How do you measure the fractal dimension?\n\nThe **fractal dimension** quantifies how complex and space-filling a pattern is. Unlike familiar Euclidean dimensions (1D for a line, 2D for a surface), fractal dimensions can take **non-integer values** between whole numbers.\n\nSeveral methods exist to estimate fractal dimension, but the **box-counting method** is the most widely used. In this approach, the object is covered with boxes of a certain size, and the number of boxes required to contain the shape is counted. This process is repeated with progressively smaller boxes.\n\nIf the logarithm of the number of boxes is plotted against the logarithm of the box size, the result is typically a straight line. The **slope of this line** gives the fractal dimension: steeper slopes correspond to more intricate, space-filling structures.\n\n## Why are we discussing this here?\n\nBecause **trees are fractal structures.**\n\n![Trees are fractals](images/fractal_tree.png)\n\nTrees exhibit self-similar branching patterns: smaller branches resemble the overall structure of the tree. While we can measure conventional forestry attributes such as height, DBH, basal area, crown dimensions, and volume, these do not capture **overall structural complexity**. To do this, we turn to fractal analysis‚Äîspecifically the **box dimension**.\n\n## From Euclidean to Fractal Dimension (Quick Intuition)\n\n-   **0-D**: point\\\n-   **1-D**: line\\\n-   **2-D**: plane/filled region\\\n-   **3-D**: solid volume\\\n-   **Fractal dimension** fills the gaps between integers and quantifies **how space-filling** a structure is.\n\nA classic example is the **Menger sponge**, which has a box dimension ‚âà 2.7268. Despite its infinite surface area, it has zero volume, an extreme case of fractal geometry.\n\n## Box Dimension\n\nThe **box dimension** is a method of fractal analysis used to quantify the *structural complexity* of an object, often derived from 3D point cloud data. The idea is simple:\\\n- Cover the object with boxes of decreasing size.\\\n- Count how many boxes are required to contain the shape.\\\n- Plot the logarithm of the box count against the logarithm of box size.\n\nIf the relationship is linear, the **slope** of that line gives the **box dimension**.\n\n\n![Seidel et al 2019](images/Seidel et al 2019.png)\n\nFormally, if the box size is $(\\varepsilon)$ and the number of occupied boxes is $N(\\varepsilon)$:\n\n$$\nN(\\varepsilon) \\propto \\varepsilon^{-D_b}\n\\quad\\Rightarrow\\quad\n\\log N(\\varepsilon) = D_b \\,\\log(1/\\varepsilon) + c\n$$\n\nWhere: - $(D_b)$ is the **box dimension**.\\\n- For 3D point clouds:\\\n- $(D_b \\approx 1)$: line-like structures\\\n- $(D_b \\approx 2)$: sheet-like structures\\\n- $(D_b \\approx 3)$: volume-filling structures\\\n- Trees typically have $(D_b)$ between 1.0 and 2.2 (method and data dependent).\\\n- A higher $R^2$ of the fit indicates stronger self-similarity across scales.\n\n### Data sensitivities\n\nBox dimension estimates depend on: 1. **Point density/resolution**\\\n2. **Occlusion or shadowing**\\\n3. **Extent of the scanned scene**\\\n4. **Scale interval chosen for fitting**\n\nHigh-quality point clouds (low occlusion, \\~0‚Äì1 cm spacing) are optimal for robust estimates.\n\n### Box Dimension vs. Voxel Counting\n\nIn practice, box-counting in 3D is implemented as **voxel counting**. Voxels are the 3D equivalent of pixels, small cubic volume elements. A point cloud is discretized into a voxel grid, and the occupied voxels are counted at multiple scales.\n\n![Source Seidel et al (2020)](images/Seidel et al 2020.png)\n\nThis process converts a 3D model or point cloud into a grid of voxels, each labeled as ‚Äúoccupied‚Äù or ‚Äúempty.‚Äù\n\n![Source: Dorji et al (2021)](images/Dorji et al 2021.png)\n\n### Interpretation\n\n-   **Box dimension ranges from 1 (line) to 3 (solid cube).**\\\n-   A dimension of **2.72** corresponds to the Menger sponge (infinite surface, zero volume).\\\n-   **Most trees** fall between **1.0 and 2.2**, reflecting their branching complexity.\\\n-   Low resolution ‚Üí oversimplification (underestimates ($D_b$)).\\\n-   High occlusion ‚Üí too few boxes at small scales (also biases ($D_b$)).\n\nThus, careful preprocessing and high-quality scans are critical for meaningful box-dimension analysis.\n\n## How to measure it in reality?\n\nTo apply this concept to forests, we calculate the **box-dimension ($(D_b$)** as a measure of tree or stand structural complexity using the **rTwig** package in R.\n\nThe algorithm for $(D_b)$ was developed initially in *Mathematica* (Wolfram Research, Champaign, IL, USA) (Seidel, 2018; Ehbrecht, 2019; Basnet, 2025). It integrates **all elements of a scanned scene** into a single value, thereby fully leveraging the potential of 3D laser scanning.\n\nIn short:\\\n- The point cloud of a tree or stand is enclosed in boxes of decreasing size.\\\n- For each box size, the number of occupied boxes is counted.\\\n- The scaling relationship between box size and number of boxes gives the **box dimension \\$(D_b\\$)**.\n\nThis workflow is implemented in the **rTwig** R package, making it straightforward to estimate structural complexity directly from normalized point cloud data.\n\n## *rTwig* R package\n\nThe **rTwig** package provides the function `box_dimension()` to calculate the fractal box dimension (\\$(D_b\\$)) from a 3D point cloud.\n\n**Usage**\n\n```r         \nbox_dimension(cloud, lowercutoff = 0.01, rm_int_box = FALSE, plot = FALSE)\n```\n\n**Arguments**\n\n***cloud***: A point cloud matrix n\\*3 (X, Y, Z). Non-matrices are automatically converted to a matrix\n\n***lowercutoff***: The smallest box size determined by the point scaping of the cloud in meters. Defaults to 1 cm\n\n***rm_int_box***: Logical, whether to remove the initial (largest) box from the fit. Defaults to FALSE.\n\n***plot***: Visualization options: \"2D\", \"3D\", or \"ALL\". FALSE disables plotting. Default is FALSE.\n\n# Practical Demonstration\n\nWe use the same ULS Lidar dataset as in the previous workshop which can be download using the following link.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data access\nurl_las <- \"https://cloud.hawk.de/index.php/s/pB4RRmLb4Xxy4Qj/download\"\ndownload.file(url_las, destfile = \"data/uls_goewa.laz\", mode = \"wb\")\n```\n:::\n\n\n\n**Important preprocessing step:** Before running box_dimension(), ensure that the point cloud is:\n\n1.  In XYZ matrix format.\n\n2.  Normalized to ground, meaning the minimum ground ùëç-value is set to 0.\n\nThis can be verified with the `las_check()` function in lidR, as shown below.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttache Paket: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDie folgenden Objekte sind maskiert von 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDie folgenden Objekte sind maskiert von 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPackage 'rTwig' version 1.4.0\nType 'citation(\"rTwig\")' for citing this R package in publications.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttache Paket: 'rTwig'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDas folgende Objekt ist maskiert 'package:lidR':\n\n    tree_metrics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[=======================================>          ] 78% ETA: 0s     \n[=======================================>          ] 78% ETA: 0s     \n[=======================================>          ] 78% ETA: 0s     \n[=======================================>          ] 78% ETA: 0s     \n[=======================================>          ] 79% ETA: 0s     \n[=======================================>          ] 79% ETA: 0s     \n[=======================================>          ] 79% ETA: 0s     \n[=======================================>          ] 79% ETA: 0s     \n[=======================================>          ] 79% ETA: 0s     \n[=======================================>          ] 79% ETA: 0s     \n[========================================>         ] 80% ETA: 0s     \n[========================================>         ] 80% ETA: 0s     \n[========================================>         ] 80% ETA: 0s     \n[========================================>         ] 80% ETA: 0s     \n[========================================>         ] 80% ETA: 0s     \n[========================================>         ] 81% ETA: 0s     \n[========================================>         ] 81% ETA: 0s     \n[========================================>         ] 81% ETA: 0s     \n[========================================>         ] 81% ETA: 0s     \n[========================================>         ] 81% ETA: 0s     \n[=========================================>        ] 82% ETA: 0s     \n[=========================================>        ] 82% ETA: 0s     \n[=========================================>        ] 82% ETA: 0s     \n[=========================================>        ] 82% ETA: 0s     \n[=========================================>        ] 82% ETA: 0s     \n[=========================================>        ] 82% ETA: 0s     \n[=========================================>        ] 83% ETA: 0s     \n[=========================================>        ] 83% ETA: 0s     \n[=========================================>        ] 83% ETA: 0s     \n[=========================================>        ] 83% ETA: 0s     \n[=========================================>        ] 83% ETA: 0s     \n[==========================================>       ] 84% ETA: 0s     \n[==========================================>       ] 84% ETA: 0s     \n[==========================================>       ] 84% ETA: 0s     \n[==========================================>       ] 84% ETA: 0s     \n[==========================================>       ] 84% ETA: 0s     \n[==========================================>       ] 85% ETA: 0s     \n[==========================================>       ] 85% ETA: 0s     \n[==========================================>       ] 85% ETA: 0s     \n[==========================================>       ] 85% ETA: 0s     \n[==========================================>       ] 85% ETA: 0s     \n[===========================================>      ] 86% ETA: 0s     \n[===========================================>      ] 86% ETA: 0s     \n[===========================================>      ] 86% ETA: 0s     \n[===========================================>      ] 86% ETA: 0s     \n[===========================================>      ] 86% ETA: 0s     \n[===========================================>      ] 86% ETA: 0s     \n[===========================================>      ] 87% ETA: 0s     \n[===========================================>      ] 87% ETA: 0s     \n[===========================================>      ] 87% ETA: 0s     \n[===========================================>      ] 87% ETA: 0s     \n[===========================================>      ] 87% ETA: 0s     \n[============================================>     ] 88% ETA: 0s     \n[============================================>     ] 88% ETA: 0s     \n[============================================>     ] 88% ETA: 0s     \n[============================================>     ] 88% ETA: 0s     \n[============================================>     ] 88% ETA: 0s     \n[============================================>     ] 89% ETA: 0s     \n[============================================>     ] 89% ETA: 0s     \n[============================================>     ] 89% ETA: 0s     \n[============================================>     ] 89% ETA: 0s     \n[============================================>     ] 89% ETA: 0s     \n[=============================================>    ] 90% ETA: 0s     \n[=============================================>    ] 90% ETA: 0s     \n[=============================================>    ] 90% ETA: 0s     \n[=============================================>    ] 90% ETA: 0s     \n[=============================================>    ] 90% ETA: 0s     \n[=============================================>    ] 90% ETA: 0s     \n[=============================================>    ] 91% ETA: 0s     \n[=============================================>    ] 91% ETA: 0s     \n[=============================================>    ] 91% ETA: 0s     \n[=============================================>    ] 91% ETA: 0s     \n[=============================================>    ] 91% ETA: 0s     \n[==============================================>   ] 92% ETA: 0s     \n[==============================================>   ] 92% ETA: 0s     \n[==============================================>   ] 92% ETA: 0s     \n[==============================================>   ] 92% ETA: 0s     \n[==============================================>   ] 92% ETA: 0s     \n[==============================================>   ] 93% ETA: 0s     \n[==============================================>   ] 93% ETA: 0s     \n[==============================================>   ] 93% ETA: 0s     \n[==============================================>   ] 93% ETA: 0s     \n[==============================================>   ] 93% ETA: 0s     \n[==============================================>   ] 93% ETA: 0s     \n[===============================================>  ] 94% ETA: 0s     \n[===============================================>  ] 94% ETA: 0s     \n[===============================================>  ] 94% ETA: 0s     \n[===============================================>  ] 94% ETA: 0s     \n[===============================================>  ] 94% ETA: 0s     \n[===============================================>  ] 95% ETA: 0s     \n[===============================================>  ] 95% ETA: 0s     \n[===============================================>  ] 95% ETA: 0s     \n[===============================================>  ] 95% ETA: 0s     \n[===============================================>  ] 95% ETA: 0s     \n[================================================> ] 96% ETA: 0s     \n[================================================> ] 96% ETA: 0s     \n[================================================> ] 96% ETA: 0s     \n[================================================> ] 96% ETA: 0s     \n[================================================> ] 96% ETA: 0s     \n[================================================> ] 97% ETA: 0s     \n[================================================> ] 97% ETA: 0s     \n                                                                                \n```\n\n\n:::\n:::\n\n\n\nThis function reports whether ground classification and normalization have been applied, which is critical for meaningful box-dimension analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass        : LAS (v1.2 format 3)\nmemory       : 313.2 Mb \nextent       : 572445.4, 572496.1, 5709020, 5709071 (xmin, xmax, ymin, ymax)\ncoord. ref.  : WGS 84 / UTM zone 32N \narea         : 2602 m¬≤\npoints       : 5.13 million points\ntype         : terrestrial\ndensity      : 1971.94 points/m¬≤\ndensity      : 1660.17 pulses/m¬≤\n```\n\n\n:::\n\n```{.r .cell-code}\nlas_check(data) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Checking the data\n  - Checking coordinates...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinates type...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinates range...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinates quantization...\u001b[0;32m ‚úì\u001b[0m\n  - Checking attributes type...\u001b[0;32m ‚úì\u001b[0m\n  - Checking ReturnNumber validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking NumberOfReturns validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking ReturnNumber vs. NumberOfReturns...\u001b[0;32m ‚úì\u001b[0m\n  - Checking RGB validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking absence of NAs...\u001b[0;32m ‚úì\u001b[0m\n  - Checking duplicated points...\u001b[0;32m ‚úì\u001b[0m\n  - Checking degenerated ground points...\u001b[0;32m ‚úì\u001b[0m\n  - Checking attribute population...\n \u001b[0;32m   üõà 'PointSourceID' attribute is not populated\u001b[0m\n \u001b[0;32m   üõà 'ScanDirectionFlag' attribute is not populated\u001b[0m\n \u001b[0;32m   üõà 'EdgeOfFlightline' attribute is not populated\u001b[0m\n  - Checking gpstime incoherances\u001b[0;32m ‚úì\u001b[0m\n  - Checking flag attributes...\u001b[0;32m ‚úì\u001b[0m\n  - Checking user data attribute...\u001b[0;32m ‚úì\u001b[0m\n Checking the header\n  - Checking header completeness...\u001b[0;32m ‚úì\u001b[0m\n  - Checking scale factor validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking point data format ID validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking extra bytes attributes validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking the bounding box validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinate reference system...\u001b[0;32m ‚úì\u001b[0m\n Checking header vs data adequacy\n  - Checking attributes vs. point format...\u001b[0;32m ‚úì\u001b[0m\n  - Checking header bbox vs. actual content...\u001b[0;32m ‚úì\u001b[0m\n  - Checking header number of points vs. actual content...\u001b[0;32m ‚úì\u001b[0m\n  - Checking header return number vs. actual content...\u001b[0;32m ‚úì\u001b[0m\n Checking coordinate reference system...\n  - Checking if the CRS was understood by R...\u001b[0;32m ‚úì\u001b[0m\n Checking preprocessing already done \n  - Checking ground classification...\u001b[0;32m yes\u001b[0m\n  - Checking normalization...\u001b[0;31m no\u001b[0m\n  - Checking negative outliers...\u001b[0;32m ‚úì\u001b[0m\n  - Checking flightline classification...\u001b[0;31m no\u001b[0m\n Checking compression\n  - Checking attribute compression...\n   -  ScanDirectionFlag is compressed\n   -  EdgeOfFlightline is compressed\n   -  Synthetic_flag is compressed\n   -  Keypoint_flag is compressed\n   -  Withheld_flag is compressed\n   -  UserData is compressed\n   -  PointSourceID is compressed\n```\n\n\n:::\n\n```{.r .cell-code}\nlas <- normalize_height(las = data, \n                        algorithm = tin(), \n                        use_class = 2)\nlas_check(las)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Checking the data\n  - Checking coordinates...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinates type...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinates range...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinates quantization...\u001b[0;32m ‚úì\u001b[0m\n  - Checking attributes type...\u001b[0;32m ‚úì\u001b[0m\n  - Checking ReturnNumber validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking NumberOfReturns validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking ReturnNumber vs. NumberOfReturns...\u001b[0;32m ‚úì\u001b[0m\n  - Checking RGB validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking absence of NAs...\u001b[0;32m ‚úì\u001b[0m\n  - Checking duplicated points...\u001b[0;32m ‚úì\u001b[0m\n  - Checking degenerated ground points...\u001b[0;32m ‚úì\u001b[0m\n  - Checking attribute population...\n \u001b[0;32m   üõà 'PointSourceID' attribute is not populated\u001b[0m\n \u001b[0;32m   üõà 'ScanDirectionFlag' attribute is not populated\u001b[0m\n \u001b[0;32m   üõà 'EdgeOfFlightline' attribute is not populated\u001b[0m\n  - Checking gpstime incoherances\u001b[0;32m ‚úì\u001b[0m\n  - Checking flag attributes...\u001b[0;32m ‚úì\u001b[0m\n  - Checking user data attribute...\u001b[0;32m ‚úì\u001b[0m\n Checking the header\n  - Checking header completeness...\u001b[0;32m ‚úì\u001b[0m\n  - Checking scale factor validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking point data format ID validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking extra bytes attributes validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking the bounding box validity...\u001b[0;32m ‚úì\u001b[0m\n  - Checking coordinate reference system...\u001b[0;32m ‚úì\u001b[0m\n Checking header vs data adequacy\n  - Checking attributes vs. point format...\u001b[0;32m ‚úì\u001b[0m\n  - Checking header bbox vs. actual content...\u001b[0;32m ‚úì\u001b[0m\n  - Checking header number of points vs. actual content...\u001b[0;32m ‚úì\u001b[0m\n  - Checking header return number vs. actual content...\u001b[0;32m ‚úì\u001b[0m\n Checking coordinate reference system...\n  - Checking if the CRS was understood by R...\u001b[0;32m ‚úì\u001b[0m\n Checking preprocessing already done \n  - Checking ground classification...\u001b[0;32m yes\u001b[0m\n  - Checking normalization...\u001b[0;32m yes\u001b[0m\n  - Checking negative outliers...\n \u001b[1;33m   ‚ö† 51 points below 0\u001b[0m\n  - Checking flightline classification...\u001b[0;31m no\u001b[0m\n Checking compression\n  - Checking attribute compression...\n   -  ScanDirectionFlag is compressed\n   -  EdgeOfFlightline is compressed\n   -  Synthetic_flag is compressed\n   -  Keypoint_flag is compressed\n   -  Withheld_flag is compressed\n   -  UserData is compressed\n   -  PointSourceID is compressed\n```\n\n\n:::\n\n```{.r .cell-code}\n#view(las)\n\nlas@data[Z<0, ] # Here, options are either to remove all or assign all to 0; however...\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           X       Y       Z   gpstime Intensity ReturnNumber NumberOfReturns\n       <num>   <num>   <num>     <num>     <int>        <int>           <int>\n 1: 572471.7 5709038 -0.0183 437809548         0            2               2\n 2: 572469.0 5709021 -0.0044 437809555         0            1               1\n 3: 572475.5 5709041 -0.0315 437809565         0            2               2\n 4: 572477.3 5709041 -0.0004 437809566        58            1               1\n 5: 572475.2 5709040 -0.0013 437809567         0            2               2\n 6: 572476.9 5709041 -0.0088 437809567         0            2               2\n 7: 572459.1 5709064 -0.0035 437809568        70            1               1\n 8: 572477.3 5709041 -0.0041 437809568         0            2               2\n 9: 572460.3 5709058 -0.0034 437809571        69            1               1\n10: 572458.5 5709062 -0.0015 437809570         0            2               2\n11: 572462.5 5709046 -0.1952 437809581         0            2               2\n12: 572480.8 5709064 -0.0056 437809627         0            2               2\n13: 572483.4 5709069 -0.0163 437809628         0            2               2\n14: 572483.8 5709068 -0.0514 437809631         0            2               2\n15: 572483.8 5709068 -0.0330 437809630         0            2               2\n16: 572483.4 5709068 -0.0129 437809630         0            2               2\n17: 572488.9 5709023 -0.0133 437809633         0            2               2\n18: 572476.2 5709047 -0.0031 437809633         0            2               2\n19: 572451.9 5709020 -0.0029 437809636         0            2               2\n20: 572483.6 5709068 -0.0488 437809637         0            2               2\n21: 572484.9 5709062 -0.0040 437809640         0            2               2\n22: 572452.1 5709020 -0.0102 437809640         0            2               2\n23: 572452.0 5709021 -0.0030 437809641         0            2               2\n24: 572488.8 5709054 -0.0037 437809643         0            2               2\n25: 572476.1 5709032 -0.0070 437809642         0            2               2\n26: 572452.2 5709020 -0.0227 437809643         0            2               2\n27: 572491.1 5709069 -0.0163 437809648        37            1               1\n28: 572488.9 5709023 -0.0496 437809652         0            2               2\n29: 572483.9 5709068 -0.0246 437810815        27            1               1\n30: 572483.4 5709068 -0.0099 437810815        30            1               1\n31: 572484.7 5709063 -0.0017 437810815         0            2               2\n32: 572477.9 5709064 -0.0101 437810819        39            1               1\n33: 572478.2 5709065 -0.0129 437810819        33            1               1\n34: 572482.9 5709060 -0.0112 437810819        54            1               1\n35: 572494.0 5709053 -0.0001 437810823        31            1               1\n36: 572491.3 5709055 -0.0017 437810823        48            1               1\n37: 572476.1 5709047 -0.0046 437810824         0            2               2\n38: 572475.6 5709050 -0.0004 437810828        59            1               1\n39: 572491.0 5709039 -0.0019 437810830        71            1               1\n40: 572473.3 5709046 -0.0006 437810831        48            1               1\n41: 572478.1 5709039 -0.0100 437810830        67            1               1\n42: 572493.1 5709032 -0.0122 437810831         0            2               2\n43: 572470.5 5709037 -0.0157 437810830         0            2               2\n44: 572490.8 5709032 -0.0080 437810834        35            1               1\n45: 572477.5 5709041 -0.0002 437810833        65            1               1\n46: 572474.1 5709035 -0.0131 437810834        52            1               1\n47: 572493.0 5709032 -0.0166 437810833         0            2               2\n48: 572477.7 5709040 -0.0088 437810834         0            2               2\n49: 572476.5 5709052 -0.0075 437810835         0            2               2\n50: 572473.1 5709038 -0.0014 437810835        48            1               1\n51: 572474.0 5709035 -0.0297 437810836        40            1               1\n           X       Y       Z   gpstime Intensity ReturnNumber NumberOfReturns\n    ScanDirectionFlag EdgeOfFlightline Classification Synthetic_flag\n                <int>            <int>          <int>         <lgcl>\n 1:                 0                0              1          FALSE\n 2:                 0                0              1          FALSE\n 3:                 0                0              1          FALSE\n 4:                 0                0              1          FALSE\n 5:                 0                0              1          FALSE\n 6:                 0                0              1          FALSE\n 7:                 0                0              1          FALSE\n 8:                 0                0              1          FALSE\n 9:                 0                0              1          FALSE\n10:                 0                0              1          FALSE\n11:                 0                0              1          FALSE\n12:                 0                0              1          FALSE\n13:                 0                0              1          FALSE\n14:                 0                0              1          FALSE\n15:                 0                0              1          FALSE\n16:                 0                0              1          FALSE\n17:                 0                0              1          FALSE\n18:                 0                0              1          FALSE\n19:                 0                0              1          FALSE\n20:                 0                0              1          FALSE\n21:                 0                0              1          FALSE\n22:                 0                0              1          FALSE\n23:                 0                0              1          FALSE\n24:                 0                0              1          FALSE\n25:                 0                0              1          FALSE\n26:                 0                0              1          FALSE\n27:                 0                0              1          FALSE\n28:                 0                0              1          FALSE\n29:                 0                0              1          FALSE\n30:                 0                0              1          FALSE\n31:                 0                0              1          FALSE\n32:                 0                0              1          FALSE\n33:                 0                0              1          FALSE\n34:                 0                0              1          FALSE\n35:                 0                0              1          FALSE\n36:                 0                0              1          FALSE\n37:                 0                0              1          FALSE\n38:                 0                0              1          FALSE\n39:                 0                0              1          FALSE\n40:                 0                0              1          FALSE\n41:                 0                0              1          FALSE\n42:                 0                0              1          FALSE\n43:                 0                0              1          FALSE\n44:                 0                0              1          FALSE\n45:                 0                0              1          FALSE\n46:                 0                0              1          FALSE\n47:                 0                0              1          FALSE\n48:                 0                0              1          FALSE\n49:                 0                0              1          FALSE\n50:                 0                0              1          FALSE\n51:                 0                0              1          FALSE\n    ScanDirectionFlag EdgeOfFlightline Classification Synthetic_flag\n    Keypoint_flag Withheld_flag ScanAngleRank UserData PointSourceID     R\n           <lgcl>        <lgcl>         <int>    <int>         <int> <int>\n 1:         FALSE         FALSE            28        0             0  2560\n 2:         FALSE         FALSE            18        0             0 23040\n 3:         FALSE         FALSE            24        0             0 44544\n 4:         FALSE         FALSE            25        0             0 43264\n 5:         FALSE         FALSE            26        0             0  3840\n 6:         FALSE         FALSE            26        0             0 36352\n 7:         FALSE         FALSE            13        0             0 14848\n 8:         FALSE         FALSE            27        0             0 37632\n 9:         FALSE         FALSE            19        0             0  3072\n10:         FALSE         FALSE            15        0             0  2816\n11:         FALSE         FALSE            34        0             0 31232\n12:         FALSE         FALSE           -11        0             0 44032\n13:         FALSE         FALSE            -9        0             0 36352\n14:         FALSE         FALSE            -8        0             0  3072\n15:         FALSE         FALSE            -8        0             0  3072\n16:         FALSE         FALSE            -8        0             0  8448\n17:         FALSE         FALSE           -23        0             0 18432\n18:         FALSE         FALSE            -9        0             0  3584\n19:         FALSE         FALSE            20        0             0 21760\n20:         FALSE         FALSE           -15        0             0  3072\n21:         FALSE         FALSE           -18        0             0 10496\n22:         FALSE         FALSE            14        0             0 20736\n23:         FALSE         FALSE            13        0             0 38400\n24:         FALSE         FALSE           -20        0             0  8960\n25:         FALSE         FALSE            -4        0             0 35328\n26:         FALSE         FALSE            11        0             0 23552\n27:         FALSE         FALSE           -34        0             0 25856\n28:         FALSE         FALSE           -20        0             0     0\n29:         FALSE         FALSE           -38        0             0  3328\n30:         FALSE         FALSE           -38        0             0 23552\n31:         FALSE         FALSE           -35        0             0 41728\n32:         FALSE         FALSE           -33        0             0 24064\n33:         FALSE         FALSE           -32        0             0 15360\n34:         FALSE         FALSE           -29        0             0  3584\n35:         FALSE         FALSE           -16        0             0 12032\n36:         FALSE         FALSE           -19        0             0  9984\n37:         FALSE         FALSE           -21        0             0  4352\n38:         FALSE         FALSE           -20        0             0  3840\n39:         FALSE         FALSE           -15        0             0  3072\n40:         FALSE         FALSE           -22        0             0  8192\n41:         FALSE         FALSE           -21        0             0 32256\n42:         FALSE         FALSE           -18        0             0 20480\n43:         FALSE         FALSE           -25        0             0     0\n44:         FALSE         FALSE           -24        0             0  9984\n45:         FALSE         FALSE           -23        0             0 26880\n46:         FALSE         FALSE           -27        0             0 16640\n47:         FALSE         FALSE           -21        0             0 39680\n48:         FALSE         FALSE           -25        0             0 22528\n49:         FALSE         FALSE           -22        0             0  4096\n50:         FALSE         FALSE           -28        0             0 13312\n51:         FALSE         FALSE           -29        0             0  4352\n    Keypoint_flag Withheld_flag ScanAngleRank UserData PointSourceID     R\n        G     B     Zref\n    <int> <int>    <num>\n 1:  3584  3840 419.7597\n 2: 27136 19712 419.9455\n 3: 54528 34304 419.6941\n 4: 50176 36096 419.7790\n 5:  6656  5120 419.7138\n 6: 44288 27392 419.7844\n 7: 21248 14336 419.2793\n 8: 47360 34048 419.7604\n 9:  4608  4608 419.3263\n10:  3840  3584 419.3013\n11: 37888 17152 419.2859\n12: 49408 33792 419.2132\n13: 39424 26112 419.1694\n14:  4096  4608 419.1535\n15:  4096  3840 419.1267\n16: 12800  7680 419.1610\n17: 25088 14848 420.5165\n18:  4864  4864 419.6685\n19: 26880 18688 419.4913\n20:  3328  3840 419.1597\n21: 14336  9472 419.2460\n22: 24832 17920 419.4772\n23: 48896 29440 419.4859\n24: 11520  8960 419.6122\n25: 40704 27648 419.9326\n26: 30464 18176 419.4840\n27: 34560 21760 419.1895\n28:     0     0 420.4728\n29:  3840  3584 419.1791\n30: 33536 17408 419.2013\n31: 50944 34048 419.2304\n32: 34304 20736 419.2761\n33: 22784 14080 419.2632\n34:  7168  4352 419.3786\n35: 17408  8704 419.7221\n36: 10752  8960 419.6808\n37:  5888  4608 419.6822\n38:  3840  3840 419.6373\n39:  4608  4352 420.0693\n40:  8704  7936 419.6462\n41: 42752 28416 419.7553\n42: 24576 11776 420.2428\n43:     0     0 419.8221\n44:  8704  5376 420.1630\n45: 37632 15872 419.7871\n46: 22272 15104 419.9067\n47: 48896 30208 420.2431\n48: 30976 16384 419.7376\n49:  4864  4864 419.5523\n50: 17408 12544 419.7752\n51:  5888  4864 419.8943\n        G     B     Zref\n```\n\n\n:::\n\n```{.r .cell-code}\n# Forest structural complexity (Box dimension)\n\ncloud = las@data[Z>0.5, 1:3] # Here, all points above 0.5 meter and only X,Y,z coordinates \n\ndb <- box_dimension(cloud = cloud, \n                    lowercutoff = 0.01, \n                    rm_int_box = FALSE, \n                    plot = FALSE )\nstr(db)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ :Classes 'tidytable', 'tbl', 'data.table' and 'data.frame':\t13 obs. of  2 variables:\n  ..$ log.box.size: num [1:13] 0 0.693 1.386 2.079 2.773 ...\n  ..$ log.voxels  : num [1:13] 1.39 2.89 4.32 6.04 7.56 ...\n  ..- attr(*, \".internal.selfref\")=<externalptr> \n $ :Classes 'tidytable', 'tbl', 'data.table' and 'data.frame':\t1 obs. of  4 variables:\n  ..$ r.squared    : num 0.964\n  ..$ adj.r.squared: num 0.96\n  ..$ intercept    : num 2.24\n  ..$ slope        : num 1.84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Box Dimension (slope)\ndb[[2]]$slope\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.838747\n```\n\n\n:::\n\n```{.r .cell-code}\ndb[[2]]$r.squared # show similarity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9636752\n```\n\n\n:::\n\n```{.r .cell-code}\n# Visualization\n# 2D Plot\nbox_dimension(las@data[, 1:3], plot = \"2D\")\n```\n\n::: {.cell-output-display}\n![](Box-dimension_files/figure-html/boxdimension-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tidytable: 13 √ó 2\n   log.box.size log.voxels\n          <dbl>      <dbl>\n 1        0           1.95\n 2        0.693       3.18\n 3        1.39        4.51\n 4        2.08        6.12\n 5        2.77        7.65\n 6        3.47        9.21\n 7        4.16       10.7 \n 8        4.85       12.2 \n 9        5.55       13.7 \n10        6.24       14.8 \n11        6.93       15.3 \n12        7.62       15.4 \n13        8.32       15.4 \n\n[[2]]\n# A tidytable: 1 √ó 4\n  r.squared adj.r.squared intercept slope\n      <dbl>         <dbl>     <dbl> <dbl>\n1     0.965         0.962      2.54  1.80\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3D Plot\n#box_dimension(las@data[, 1:3], plot = \"3D\")\n```\n:::\n\n\n\n## References\n\n-   Mandelbrot, B. B. (1983). The Fractal Geometry of Nature. W.H. Freeman.\n\n-   Seidel, D. et al. (2019). How a measure of tree structural complexity relates to architectural benefit-to-cost ratio, light availability, and growth of trees. Ecology and Evolution, 9(12), 7134‚Äì7142. https://doi.org/10.1002/ece3.5281\n\n-   Seidel, D., Annigh√∂fer, P., Ehbrecht, M., Magdon, P., W√∂llauer, S., & Ammer, C. (2020). Deriving Stand Structural Complexity from Airborne Laser Scanning Data‚ÄîWhat Does It Tell Us about a Forest? Remote Sensing, 12(11), 1854. https://doi.org/10.3390/rs12111854\n\n-   Dorji, Y., Schuldt, B., Neudam, L., Dorji, R., Middleby, K., Isasa, E., & K√∂rber, K. et al. (2021). Trees, 35(4), 1385‚Äì1398. https://doi.org/10.1007/s00468-021-02124-9\n\n-   Basnet, P., Das, S., H√∂lscher, D., Pierick, K., & Seidel, D. (2025). Drivers of forest structural complexity in mountain forests of Nepal. Mountain Research and Development, 45(1), R1‚ÄìR10. https://doi.org/10.1659/mrd.2024.00009\n\n-   rTwig vignette (Box Dimension): https://cran.r-project.org/web/packages/rTwig/vignettes/Box-Dimension.html\n",
    "supporting": [
      "Box-dimension_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}